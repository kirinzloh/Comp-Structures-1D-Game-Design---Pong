module paddleA (
    input clk,
    input rst,
    input playing,
    //input ballX[4],
    input btnLeft,
    input btnRight,
    output padA[4]
  ) {

  .clk(clk) {
    edge_detector edge_detector_left(#RISE(1), #FALL(0)); // detect rising edges
    edge_detector edge_detector_right(#RISE(1), #FALL(0));
    button_conditioner button_cond_left;
    button_conditioner button_cond_right;
  .rst(rst){
      fsm state(.clk(clk), #INIT(GAMESTART)) = {GAMEON,GAMESTART,LEFTBTNWAIT,RIGHTBTNWAIT};
      dff padAtemp[4];
      }
  }  
 //sig ai;
  
  always {
    padA = padAtemp.q;
    button_cond_left.in = btnLeft;
    edge_detector_left.in = button_cond_left.out;
    button_cond_right.in = btnRight;
    edge_detector_right.in = button_cond_right.out;
    
//    ai = 1;
    
    // if (playing == 1){
    //   if (ai == 1){
    //     if (ballX < padAtemp && padAtemp > 1){
    //       padAtemp = padAtemp - 1;
    //       padA = padAtemp;
    //     }
    //     else if (ballX > padAtemp && padAtemp < 14){
    //       padAtemp = padAtemp + 1;
    //       padA = padAtemp;
    //     }
    //   }
    //   ai = 0;
    // }
    
    case (state.q){
      state.GAMESTART:
        padAtemp.d = 1;
        state.d = state.GAMEON;
        
      state.GAMEON:
        if (playing == 1){
          if (edge_detector_left.out == 1 && padAtemp.q > 1){
            padAtemp.d = padAtemp.q - 1;
            padA = padAtemp.q;
            state.d = state.LEFTBTNWAIT;
          }
          if (edge_detector_right.out == 1 && padAtemp.q < 14){
            padAtemp.d = padAtemp.q + 1;
            padA = padAtemp.q;
            state.d = state.RIGHTBTNWAIT;
          }
        }
        else if (playing == 0){
          state.d = state.GAMESTART;
        }
        
      state.LEFTBTNWAIT:
        if (playing == 1){
          if (edge_detector_left.out == 0){
            state.d = state.GAMEON;
          }
        }
        
      state.RIGHTBTNWAIT:
        if (playing == 1){
          if (edge_detector_right.out == 0){
            state.d = state.GAMEON;
          }
        }
    }
  }
}
